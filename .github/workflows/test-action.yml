name: test-action
on:
  push:
    branches:
      - main

env:
  TF_VERSION: 1.1.2
  AWS_ROLE_ARN: arn:aws:iam::365084727525:role/test-GithubActionRole
  AWS_DEFAULT_REGION: ap-northeast-1
  AWS_PROFILE: GitHubActions

permissions:
  id-token: write
  contents: read

jobs:
  # set-matrix:
  check_changed_dirs:
    runs-on: ubuntu-20.04

    env:
      TF_ROOT_DIR: .

    outputs:
      # 全ディレクトリ用
      # dirs: ${{ steps.find-tfstate-dirs.outputs.dirs }}
      changes: ${{ steps.pr_dir_changes.outputs.changes }}

    steps:
      - uses: actions/checkout@v3

        # https://github.com/dorny/paths-filter
        id: changes
        with:
          fetch-depth: 0
      - id: pr_dir_changes
        # masterと差分のあるディレクトリのみを抽出する
        # https://stackoverflow.com/questions/50440420/git-diff-only-show-which-directories-changed
        run: |
          echo "changes="[$(git diff origin/"${GITHUB_BASE_REF}" --dirstat=files,0 | awk '{print $2}' | sed -e 's:/*$::' | grep 'environments' | awk '{ print "\""$0"\""}' | paste -sd, -)]"" >> "$GITHUB_OUTPUT"

  # 全ディレクトリ用
  # https://zenn.dev/shonansurvivors/articles/22e83a31abeb62
  # - name: Find tfstate dirs
  #   id: find-tfstate-dirs
  #   run: |
  #     dirs=$(find ${TF_ROOT_DIR} -type f -name '*.tf' -exec dirname {} \; | grep -v 'modules\|\.terraform' | sort | uniq | jq -R -s -c 'split("\n")[:-1]')
  #     echo $dirs # 確認用
  #     echo "::set-output name=dirs::${dirs}"

  terraform:
    # environmentはgithub上でsetting -> environmentの設定をしていない場合は不要
    # environment:
    #   name: <環境名>

    runs-on: ubuntu-latest
    # needs: set-matrix
    needs: check_changed_dirs
    # if: needs.determine-workdir.outputs.workdirs != '[]'
    # strategy:
    #   fail-fast: false
    #   max-parallel: 1
    #   matrix:
    #     TF_DIR: ${{ fromJson(needs.set-matrix.outputs.dirs) }}
    strategy:
      matrix:
        dir: ${{ fromJSON(needs.check_changed_dirs.outputs.changes) }}

    defaults:
      run:
        shell: bash
        # working-directory: ${{ matrix.TF_DIR }}
        working-directory: ${{ matrix.dir }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_ARN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Exec Terraform fmt check
        run: |
          terraform fmt -recursive -check

      - name: Exec Terraform init
        run: |
          pwd; terraform init

      - name: Exec Terraform plan
        run: |
          pwd
          echo $AWS_PROFILE
          aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} --profile ${{ env.AWS_PROFILE }}
          aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} --profile ${{ env.AWS_PROFILE }}
          aws configure set aws_session_token ${AWS_SESSION_TOKEN} --profile ${{ env.AWS_PROFILE }}
          terraform plan -var "profile=${{ env.AWS_PROFILE }}" -no-color
          terraform plan -no-color

      # - name: Exec Terraform apply
      #   uses: dflook/terraform-apply@v1
      #   with:
      #     path: policys
      #     auto_approve: true
